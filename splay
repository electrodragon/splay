#!/usr/bin/python
import os, sys, subprocess, random

def help_msg():
    s = '\n   Search and Play ( splay )\n'
    s += "\n:: Usage:\n   splay [options] <SearchTerms...>\n"
    s += "\n:: Options:\n"
    s += "   --dir=\'path\' | Searches in given Directory\n"
    s += "   --no-video   | Plays Media as Audio Only !\n"
    s += "   --help       | Shows This Help Screen\n"
    s += "   --gs         | Performs Grand Search\n"
    s += "   --shuffle    | Shuffles Media\n"
    s += "\n:: Examples: \n"
    s += "   $ splay \'term1\' \'term2\' \'termN\'\n"
    s += "   $ splay --no-audio \'term1\' \'term2\' \'termN\'\n"
    s += "   $ splay --dir=\'~/My Songs\' --dir=~/Music --no-video friends\n"
    return s

def get_working_dir(args=sys.argv[1:]):
    __un__ = subprocess.run(['whoami'], stdout=subprocess.PIPE).stdout.decode('utf-8').replace('\n','')
    _pwd_ = subprocess.run(['pwd'], stdout=subprocess.PIPE).stdout.decode('utf-8').replace('\n','')
    __dirs__ = []
    temp = None
    for arg in args:
        if '--dir=' in arg:
            __dir__ = arg.split('=')[1]
            if __dir__[0:2] == './': temp = _pwd_+'/'+__dir__[2:]
            elif __dir__[0:2] == '~/': temp = '/home/'+__un__+'/'+__dir__[2:]
            else: temp = __dir__
            if temp not in __dirs__: __dirs__.append(temp)
    if len(__dirs__) == 0: __dirs__.append(_pwd_)
    else:
        for d in __dirs__:
            if os.path.isdir(d) == False: return False
    return __dirs__

def all_files_in_dirs():
    files = []
    s_dirs = get_working_dir()
    for sd in s_dirs:
        for r,d,f in os.walk(sd):
            for a in f:
                a = a.replace("\'","\'\\\'\'")
                files.append(os.path.join(r,a))
    return files

def search_args(args=sys.argv[1:]):
    s_args = []
    pargs = ['--no-video','--help','--shuffle','--gs', '--dir']
    for arg in args:
        if arg in pargs: pass
        else:
            if '--dir=' not in arg:
                if arg not in s_args: s_args.append(arg)
    return s_args

def grandSearchResult(f,arg):
    def word_maker(wordSpl):
        words = []
        words.append(''.join(wordSpl))
        for i in range(0, len(wordSpl)):
            st = ''
            if i > 0: st+= ''.join(wordSpl[:i])
            st+=wordSpl[i]+wordSpl[i]+''.join(wordSpl[i+1:])
            words.append(st)
        return words

    words = []
    arg = arg.split()
    args = []
    for a in arg:
        wordSpl = []
        for i in range(0, len(a)):
            if a[i] not in wordSpl: wordSpl.append(a[i])
        args.append(wordSpl)
    for a in args:
        maker_words = word_maker(a)
        words.append(maker_words)

    counter = list(range(0,len(args)))
    for i in range(0,len(counter)): counter[i] = 0
    t = 0
    for block in words:
        for b in block:
            if b.lower() in f.lower():
                counter[t] += 1
        t += 1

    return False if 0 in counter else True

def found_files(files):
    ff = []
    grandSearch = True if '--gs' in sys.argv[1:] else False
    for f in files:
        name = f.split('/')[-1]
        for arg in search_args():
            if grandSearch == True:
                if grandSearchResult(name,arg) == True:
                    if f not in ff: ff.append(f)
            else:
                if arg.lower() in name.lower():
                    if f not in ff: ff.append(f)
    return ff

def create_filecmd(ff):
    c = 1
    cmd = ''
    for f in ff:
        cmd += '\''+f+'\' '
        print(':: {}. {}'.format(c,f.split('/')[-1]))
        c += 1
    print('')
    return cmd

if '--help' in sys.argv[1:]: sys.exit(help_msg())
if get_working_dir() == False: sys.exit("\n :: Directory Doesn\'t Exist !\n")
if len(all_files_in_dirs()) == 0: sys.exit("\n :: Empty Directory !\n")
if len(search_args()) == 0: sys.exit("\n :: No Search Terms Specified !\n")
files = all_files_in_dirs()
if '--shuffle' in sys.argv[1:]: random.shuffle(files)
if len(found_files(files)) == 0: sys.exit("\n :: No Match Found !\n ")
os.system('mpv --no-video '+create_filecmd(found_files(files))) if '--no-video' in sys.argv[1:] else os.system('mpv '+create_filecmd(found_files(files)))
